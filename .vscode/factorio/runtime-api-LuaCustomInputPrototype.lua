---@meta
---@diagnostic disable

--$Factorio 1.1.70
--$Overlay 5
--$Section LuaCustomInputPrototype
-- This file is automatically generated. Edits will be overwritten.

---Prototype of a custom input.
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html)
---@class LuaCustomInputPrototype:LuaObject
---[R]  
---The action that happens when this custom input is triggered.
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html#LuaCustomInputPrototype.action)
---@field action string 
---[R]  
---The default alternative key sequence for this custom input, if any
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html#LuaCustomInputPrototype.alternative_key_sequence)
---@field alternative_key_sequence? string 
---[R]  
---The consuming type: `"none"` or `"game-only"`.
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html#LuaCustomInputPrototype.consuming)
---@field consuming string 
---[R]  
---Whether this custom input is enabled. Disabled custom inputs exist but are not used by the game.
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html#LuaCustomInputPrototype.enabled)
---@field enabled boolean 
---[R]  
---Whether this custom input is enabled while using the cutscene controller.
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html#LuaCustomInputPrototype.enabled_while_in_cutscene)
---@field enabled_while_in_cutscene boolean 
---[R]  
---Whether this custom input is enabled while using the spectator controller.
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html#LuaCustomInputPrototype.enabled_while_spectating)
---@field enabled_while_spectating boolean 
---[R]  
---Whether this custom input will include the selected prototype (if any) when triggered.
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html#LuaCustomInputPrototype.include_selected_prototype)
---@field include_selected_prototype boolean 
---[R]  
---The item that gets spawned when this custom input is fired, if any.
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html#LuaCustomInputPrototype.item_to_spawn)
---@field item_to_spawn? LuaItemPrototype 
---[R]  
---The default key sequence for this custom input.
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html#LuaCustomInputPrototype.key_sequence)
---@field key_sequence string 
---[R]  
---The linked game control name, if any.
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html#LuaCustomInputPrototype.linked_game_control)
---@field linked_game_control? string 
---[R]
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html#LuaCustomInputPrototype.localised_description)
---@field localised_description LocalisedString 
---[R]
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html#LuaCustomInputPrototype.localised_name)
---@field localised_name LocalisedString 
---[R]  
---Name of this prototype.
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html#LuaCustomInputPrototype.name)
---@field name string 
---[R]  
---The class name of this object. Available even when `valid` is false. For LuaStruct objects it may also be suffixed with a dotted path to a member of the struct.
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html#LuaCustomInputPrototype.object_name)
---@field object_name string 
---[R]  
---The string used to alphabetically sort these prototypes. It is a simple string that has no additional semantic meaning.
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html#LuaCustomInputPrototype.order)
---@field order string 
---[R]  
---Is this object valid? This Lua object holds a reference to an object within the game engine. It is possible that the game-engine object is removed whilst a mod still holds the corresponding Lua object. If that happens, the object becomes invalid, i.e. this attribute will be `false`. Mods are advised to check for object validity if any change to the game state might have occurred between the creation of the Lua object and its access.
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html#LuaCustomInputPrototype.valid)
---@field valid boolean 
local LuaCustomInputPrototype={
---All methods and properties that this object supports.
---
---[View documentation](https://lua-api.factorio.com/latest/LuaCustomInputPrototype.html#LuaCustomInputPrototype.help)
---@return string
help=function()end,
}


